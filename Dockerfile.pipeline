# Pipeline-optimized Dockerfile for CI/CD
# Fast builds without heavy AI/ML dependencies

FROM python:3.11-slim

# Set environment variables for faster builds
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive \
    PIP_TIMEOUT=300 \
    PIP_DEFAULT_TIMEOUT=300

# Install system dependencies in a single layer
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    postgresql-client \
    build-essential \
    libpq-dev \
    curl \
    gettext \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set work directory
WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/logs /app/staticfiles /app/media \
    && chmod 777 /app/logs /app/staticfiles /app/media

# Install Python dependencies with timeout and retry
COPY requirements.pipeline.txt ./
RUN pip install --no-cache-dir --timeout 300 --retries 3 -r requirements.pipeline.txt

# Copy project files
COPY . .

# Create non-root user
RUN adduser --disabled-password --gecos '' appuser \
    && chown -R appuser:appuser /app

USER appuser

EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/health/ || exit 1

# Use gunicorn with optimized settings for production
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "--timeout", "120", "--keep-alive", "2", "--log-level", "info", "pms.wsgi:application"] 